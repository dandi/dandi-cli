[metadata]
name = dandi
url = http://dandiarchive.org
author = DANDI developers
author_email = team@dandiarchive.org
maintainer = Yaroslav O. Halchenko
maintainer_email = debian@onerussian.com
classifiers =
    Development Status :: 1 - Planning
    Environment :: Console
    Intended Audience :: Science/Research
    License :: OSI Approved :: Apache Software License
    Operating System :: OS Independent
    Programming Language :: Python
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11
    Programming Language :: Python :: 3.12
    Topic :: Scientific/Engineering
license = Apache 2.0
description = Command line client for interaction with DANDI archive elements
long_description = file:README.md
long_description_content_type = text/markdown; charset=UTF-8
platforms = OS Independent
project_urls =
    Source Code = https://github.com/dandi/dandi-cli
    Documentation = https://dandi.readthedocs.io

[options]
python_requires = >=3.8
install_requires =
    bidsschematools ~= 0.7.0
    click >= 7.1
    click-didyoumean
    dandischema ~= 0.8.0
    etelemetry >= 0.2.2
    fasteners
    fscacher >= 0.3.0
    hdmf != 3.5.0
    humanize
    interleave ~= 0.1
    joblib
    keyring != 23.9.0
    keyrings.alt
    packaging
    platformdirs
    pycryptodomex  # for EncryptedKeyring backend in keyrings.alt
    pydantic >= 1.9.0
    pynwb >= 1.0.3,!=1.1.0,!=2.3.0
    nwbinspector >= 0.4.28
    pyout >=0.5, !=0.6.0
    python-dateutil
    requests ~= 2.20
    ruamel.yaml >=0.15, <1
    semantic-version
    tenacity
    zarr ~= 2.10
    zarr_checksum ~= 0.2.12
zip_safe = False
packages = find_namespace:
include_package_data = True

[options.packages.find]
include = dandi*

[options.extras_require]
# I bet will come handy
#doc =
#    matplotlib >= 1.3.1
#    numpydoc
#    sphinx >=0.3
# PyNWB extensions we know and somewhat care about
# e.g. import whenever pynwb fails without them
extensions =
    allensdk
extras =
    duecredit
    fsspec[http]
style =
    flake8
    pre-commit
test =
    anys ~= 0.2
    coverage
    opencv-python
    pytest
    pytest-cov
    pytest-mock
    pytest-rerunfailures
    responses != 0.24.0
    vcrpy
tools=
    boto3
all =
    #%(doc)s
    %(extensions)s
    %(extras)s
    %(style)s
    %(test)s
    %(tools)s

[options.entry_points]
console_scripts =
    dandi=dandi.cli.command:main

[flake8]
max-line-length = 100
ignore = E203,W503
extend-exclude =
    _version.py
    versioneer.py

[versioneer]
VCS = git
style = pep440
versionfile_source = dandi/_version.py
versionfile_build = dandi/_version.py
tag_prefix =
parentdir_prefix =

[codespell]
skip = _version.py,due.py,versioneer.py,*.vcr.yaml,venv,venvs
# Don't warn about "[l]ist" in the abbrev_prompt() docstring:
# TE is present in the BIDS schema
ignore-regex = (\[\w\]\w+|TE|ignore "bu" strings)
ignore-words-list = ba,bu,fo

[mypy]
# TODO: Eventually uncomment these:
#allow_untyped_defs = False
implicit_reexport = False
allow_incomplete_defs = False
ignore_missing_imports = False
no_implicit_optional = True
local_partial_types = True
pretty = True
show_error_codes = True
show_traceback = True
strict_equality = True
warn_redundant_casts = True
warn_return_any = True
warn_unreachable = True
plugins = pydantic.mypy
exclude = _version\.py|due\.py

[mypy-dandi.*]
ignore_missing_imports = True

[mypy-dandi._version]
follow_imports = skip

[mypy-dandi.due]
follow_imports = skip

[mypy-bidsschematools.*]
# <https://github.com/bids-standard/bids-specification/issues/1484>
ignore_missing_imports = True

[mypy-click_didyoumean.*]
# <https://github.com/click-contrib/click-didyoumean/issues/16>
ignore_missing_imports = True

[mypy-etelemetry.*]
# <https://github.com/sensein/etelemetry-client/issues/53>
ignore_missing_imports = True

[mypy-fasteners.*]
# <https://github.com/harlowja/fasteners/issues/111>
ignore_missing_imports = True

[mypy-fscacher.*]
ignore_missing_imports = True

[mypy-fsspec.*]
# <https://github.com/fsspec/filesystem_spec/issues/625>
ignore_missing_imports = True

[mypy-joblib.*]
# <https://github.com/joblib/joblib/issues/1516>
ignore_missing_imports = True

[mypy-h5py.*]
# <https://github.com/h5py/h5py/issues/1912>
ignore_missing_imports = True

[mypy-hdmf.*]
# <https://github.com/hdmf-dev/hdmf/issues/994>
ignore_missing_imports = True

[mypy-keyrings.alt.*]
# <https://github.com/jaraco/keyrings.alt/issues/52>
ignore_missing_imports = True

[mypy-nwbinspector.*]
# <https://github.com/NeurodataWithoutBorders/nwbinspector/issues/416>
ignore_missing_imports = True

[mypy-pynwb.*]
# <https://github.com/NeurodataWithoutBorders/pynwb/issues/1408>
ignore_missing_imports = True

[mypy-pyout.*]
# <https://github.com/pyout/pyout/issues/142>
ignore_missing_imports = True

[mypy-semantic_version.*]
# <https://github.com/rbarrois/python-semanticversion/issues/138>
ignore_missing_imports = True

[mypy-vcr.*]
# <https://github.com/kevin1024/vcrpy/issues/780>
ignore_missing_imports = True

[mypy-zarr.*]
# <https://github.com/zarr-developers/zarr-python/issues/1566>
ignore_missing_imports = True

[pydantic-mypy]
init_forbid_extra = True
warn_untypes_fields = True
